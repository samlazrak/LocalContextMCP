version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: mcp_postgres
    environment:
      POSTGRES_DB: mcp_server
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  mcp_server:
    build: .
    container_name: mcp_server
    environment:
      - ENVIRONMENT=production
      - PGHOST=postgres
      - PGPORT=5432
      - PGDATABASE=mcp_server
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8080
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - /workspace:/workspace:ro  # Mount workspace read-only
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  mcp-network:
    driver: bridge 