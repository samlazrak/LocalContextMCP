{
  "mcpServers": {
    "filesystem": {
      "command": "docker",
      "args": [
        "run", "-i", "--rm",
        "--mount", "type=bind,src=/Users/m3/AI/LocalContextMCP,dst=/projects/bot-env",
        "filesystem",
        "/projects"
      ]
    },
    "git": {
      "command": "docker",
      "args": ["run", "-i", "--rm", "git"]
    },
    "time": {
      "command": "docker",
      "args": ["run", "-i", "--rm", "time"]
    },
    "sqlite": {
      "command": "docker",
      "args": ["run", "-i", "--rm", "sqlite"]
    },
    "fetch": {
      "command": "docker",
      "args": ["run", "-i", "--rm", "fetch"]
    },
    "sequentialthinking": {
      "command": "docker",
      "args": ["run", "-i", "--rm", "sequentialthinking"]
    },
    "postgres": {
      "command": "docker",
      "args": [
        "run", "-i", "--rm", "postgres",
        "postgresql://host.docker.internal:5432/mcp_memory"
      ]
    },
    "memory": {
      "command": "docker",
      "args": ["run", "-i", "--rm", "memory"]
    },
    "web-search": {
      "command": "docker",
      "args": ["run", "-i", "--rm", "web-search"]
    },
    "localContextMCP": {
      "command": "docker",
      "args": [
        "run", "-i", "--rm",
        "-e", "PGHOST=host.docker.internal",
        "-e", "PGPORT=5432",
        "-e", "PGDATABASE=mcp_memory",
        "-e", "PGUSER=postgres",
        "-e", "PGPASSWORD=postgres",
        "-e", "LMSTUDIO_API_BASE=http://host.docker.internal:1234/v1",
        "-e", "LMSTUDIO_EMBEDDING_MODEL=qwen2.5-coder-0.5B-instruct",
        "localcontextmcp"
      ]
    },
    "desktop-commander": {
      "command": "npx",
      "args": [
        "-y", "@smithery/cli@latest", "run", "@wonderwhy-er/desktop-commander",
        "--key", "57d49901-03f1-4efd-8cb9-3db9573e51b4"
      ]
    },
    "duckduckgo-mcp-server": {
      "command": "npx",
      "args": [
        "-y", "@smithery/cli@latest", "run", "@nickclyde/duckduckgo-mcp-server",
        "--key", "57d49901-03f1-4efd-8cb9-3db9573e51b4"
      ]
    },
    "servers": {
      "command": "npx",
      "args": [
        "-y", "@smithery/cli@latest", "run", "@jlia0/servers",
        "--key", "57d49901-03f1-4efd-8cb9-3db9573e51b4"
      ]
    }
  },
  "description": "Structured output template for MCP server with PostgreSQL, LM Studio, and tool/memory integration.",
  "format": {
    "entities": [
      {
        "id": "entity_1",
        "name": "Example Entity",
        "type": "Person | Organization | Tool | File | Database | ...",
        "attributes": {
          "role": "user | assistant | system",
          "tool": "git | sqlite | postgres | ...",
          "file_path": "/projects/bot-env/...",
          "db_table": "messages | context_chunks | ...",
          "other": "Any other relevant attribute"
        }
      }
    ],
    "facts": [
      {
        "subject": "entity_1",
        "relation": "used_tool | stored_in | embedded_with | chunked_into | ...",
        "object": "entity_2",
        "evidence": "User called the 'git' tool to check status."
      }
    ],
    "events": [
      {
        "id": "event_1",
        "type": "ToolCall | MessageStored | EmbeddingGenerated | ...",
        "participants": ["entity_1", "entity_2"],
        "date": "2025-06-29T15:30:00Z",
        "description": "User stored a message and generated an embedding."
      }
    ],
    "memory": [
      {
        "key": "session_id:session456",
        "value": "User message and context chunk stored."
      }
    ],
    "context": "This information was extracted from the user's interaction with the MCP server, including tool calls, file/database operations, and memory updates."
  },
  "instructions": "Return only valid JSON. Use unique IDs for entities and events. Only include fields present in the input. Use types and relations relevant to the MCP server's actual tools and memory."
}
